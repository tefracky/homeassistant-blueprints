blueprint:
  source_url: "https://raw.githubusercontent.com/tefracky-organization/homeassistant-blueprints/refs/heads/blueprints/automations/notifications.yaml"
  name: Benachrichtigungen (Android + Persistent)
  description: >
    # 📢 Benachrichtigungen

    ## **Version 1.6**

    - 🔄 **Auto-Flag umbenannt und Default geändert**  
      `send_car` heißt jetzt `send_to_car` (Standard: false) und sendet nur noch an das Gerät  
      7b4588bc469f471e30087c5757f2ebf4 (EOS), wenn aktiviert.

    - ➕ **Neue Arbeits-Benachrichtigung**  
      `send_to_work` (Standard: false) ermöglicht nun das Hinzufügen der Arbeitsgeräte  
      e0f19df8be795d8d5867ccf822025697 (Oliver Handy Arbeit) und  
      170f72bbcf6e90b79e776d8511fc2419 (Tina Tablet Arbeit).

    - 🛠 **Notify-Devices-Logik aufgeteilt**  
      Basis-Liste enthält nur Privatgeräte. Arbeits- und Auto-Geräte werden nun getrennt nach ihren Flags hinzugefügt.

    ## **Version 1.5**

    Sende smarte Benachrichtigungen bei definierten Auslösern – sowohl an dein Android-Gerät als auch als permanente Mitteilung in der Home Assistant‑Oberfläche.

    Mit dieser Blueprint‑Vorlage kannst du flexibel Trigger definieren (z. B. Zustände, numerische Werte oder Zeitpunkte) und daraufhin Nachrichten verschicken – inklusive optionaler Sprachansage, interaktiver Aktions‑Buttons und erweiterter Bedingungslogik.

    > **⚙️ Voraussetzung:** Home Assistant **ab Version 2024.10**, damit die neue Listen‑Merge‑Funktion für Trigger verwendet werden kann.

    - **🧲 Trigger & Endzustände**:
      - Nutze den **Trigger Selector**, um beliebige Ereignisse per UI zu definieren.
      - Mehrere Trigger sind gleichzeitig möglich und werden nun **dynamisch flach zusammengeführt** (ohne versteckte UND‑Verschachtelung).
      - Definiere einen Endzustand (z. B. zum Entfernen einer Notification) – inklusive **zusätzlicher Bedingungen**.
      - Unterstützt **Bedingungen beim Triggern und Löschen**, um nur bei bestimmten Konstellationen auszulösen.

    - **📲 Benachrichtigungen**:
      - Nachrichten an Mobilgeräte senden.
      - Als persistente UI‑Mitteilungen anzeigen.
      - Integrierte Text‑to‑Speech und Aktionen möglich.

    - **🕹 Aktions‑Buttons**:
      - Ergänze individuell konfigurierbare Buttons direkt in der Notification.
      - Jeder Button feuert nun als **eigenständiger Trigger**, ohne dass andere Bedingungen gleichzeitig erfüllt sein müssen.

    - **⛔ Bedingungen & Kontrolle**:
      - Lege globale Bedingungen fest, unter denen die Automation überhaupt ausgeführt werden darf.
      - Zusätzliche Bedingungen **nur für Trigger‑ oder Lösch‑Ereignisse** definierbar.


    ## Changelog

    **1.5**: Dynamische Trigger-Listen flach zusammenführen (Trigger Merge)

    - 🆕 **Trigger Merge-Support (HA ≥ 2024.10)**
      - Neue `min_version: '2024.10.0'` für die Blueprint‑Definition hinzugefügt, um die native Listen‑Merge-Funktion zu nutzen.  
      - `dynamic_trigger` und `clear_trigger` werden jetzt per `- triggers: !input …` direkt in die flache `triggers:`-Liste eingefügt, statt verschachtelt – dadurch entfällt die unerwünschte UND‑Logik.

    - ✂️ **Verschachtelte `triggers:`-Blöcke entfernt**
      - Alte nested-Trigger-Abschnitte gelöscht, um Klarheit und Vorhersagbarkeit zu verbessern.

    - ✅ **Button-Events feuern einzeln**
      - Alle mobilen App‑Action-Buttons (`action_button_1`, `action_button_2`, `action_button_3`, `dismiss`) stehen jetzt als eigenständige Trigger-Einträge in der Liste und reagieren punktgenau auf das jeweilige Event.

    - 🛠 **Fehlerbehebung & Kompatibilität**
      - Vermeidet das Verschwinden von Button-Triggern durch falsche Kombination mit dynamischen Trigger-Bedingungen.
      - Blueprint ist ab jetzt nur noch auf HA-Instanzen mit Version 2024.10 oder neuer lauffähig.

    > **Hinweis:** Nach dem Update der Blueprint unter **Konfiguration → Automatisierungen → Neu laden** die betroffenen Automationen neu speichern, damit die geänderten Trigger korrekt aktiviert werden.


    **1.4**: Zusätzliche Bedingungen für Trigger- und Endzustand

    - ✅ **Neue Bedingungsoptionen hinzugefügt:**
      - `trigger_conditions`: Ermöglicht es, nur dann Benachrichtigungen zu senden, wenn zusätzliche Bedingungen beim Trigger erfüllt sind.
      - `clear_conditions`: Ermöglicht das automatische Löschen von Benachrichtigungen nur bei erfüllten Bedingungen (z. B. Zustand + Zeitspanne + Anwesenheit).

    - 🧠 **Intelligentere Ablaufsteuerung:**
      - Die Bedingungen wurden in die `choose:`-Logik integriert und verhindern zuverlässig das Ausführen der Hauptaktionen bei nicht erfüllten Voraussetzungen.

    - 🧼 **Klarere Struktur:**
      - Trennung der Bedingungslogik für Trigger und Endzustände – mehr Flexibilität, bessere Lesbarkeit.

    - 🛠 **Fehlerbehebung:**
      - Korrektur der Trigger-ID für den Button „Löschen“ zu `clear_notification_button`, um Konflikte mit `clear_notification_trigger` zu vermeiden.


    **1.3**: Verbesserungen an den Benachrichtigungsoptionen und der Benutzerfreundlichkeit

    - 🛠 **Neue Auswahl für Benachrichtigungsoptionen:**
      Die Auswahl für die mobile App-Benachrichtigungsoption (`include_notify`) wurde entfernt. Es werden jetzt immer Benachrichtigungen an Mobilgeräte gesendet.

    - ✏️ **Standardwerte aktualisiert:**
      Standardwerte für Titel und Nachricht der Benachrichtigung (`notify_title`, `notify_message`) wurden hinzugefügt, um die Konfiguration zu erleichtern.

    - 📱 **Android-spezifische Optionen erweitert:**
      Zusätzliche Optionen für Android-Benachrichtigungen (`notify_data`) wie Hochpriorität und feste Benachrichtigungen wurden hinzugefügt.

    - 🔧 **Verbesserte Struktur:**
      Die YAML-Definition wurde optimiert, um die Lesbarkeit und Wartbarkeit zu verbessern.

    **1.2**: Benachrichtigungen senden und löschen an Skripte ausgelagert

    - 🗑 **Refaktorierte Löschlogik:**
      Statt der bisherigen, manuellen Abfolge zum Löschen persistenter Benachrichtigungen wird nun das zentrale Skript `script.notification_delete` aufgerufen. Dies sorgt für einen klareren Ablauf und verbesserte Wartbarkeit.

    - 🔔 **Modularisierte Benachrichtigungsroutine:**
      Ein neuer Choose-Zweig „Check if notification is enabled“ überprüft, ob mobile App-Benachrichtigungen aktiviert sind und ob Geräte vorhanden sind, und löst dann das Skript `script.notification_send` aus – inklusive Übergabe aller relevanten Parameter wie Titel, Nachricht, Daten und Aktions-Buttons.

    - 🧹 **Bereinigung der Legacy-Struktur:**
      Der bisher verwendete `default`-Block, der separate Zuständigkeiten für Gerätebenachrichtigungen und das Erstellen persistenter Nachrichten innehatte, wurde komplett entfernt, um Redundanzen abzubauen und die Logik zu vereinheitlichen.

    - ⚙️ **Integrierte benutzerdefinierte Aktionen:**
      Die Option, benutzerdefinierte Aktionen auszuführen, bleibt erhalten – in den neuen Benachrichtigungs-Branch integriert, um den Ablauf zu vereinheitlichen und die Konfiguration übersichtlicher zu gestalten.

    **1.1**: Aktionen zu Benachrichtigungen hinzugefügt

    - ✨ Umstellung auf `trigger:` Selector – mehr Flexibilität, bessere UI.

    - ➕ Unterstützung für **mehrere Trigger** gleichzeitig.

    - 🧼 Entfernt: Komplexe manuelle Zustandstyp-Auswahl.

    - 🧽 Entfernt: `time_delay_state`, da dies direkt im Trigger möglich ist (`for:`).

    - 🧩 Trigger & Endzustand in einer Gruppe zusammengeführt.

    **Vielen Dank an die ursprünglichen Entwickler:**
      - [Notifications and Announcements](https://gist.github.com/Blackshome/180ca4a24af81cd5d843acfc039039bc)
      - [State Notification Actions](https://gist.github.com/Blackshome/06f6f28e76299267b813dac48608f549)
      - **Spende für den Entwickler:** [Hier klicken](https://www.paypal.com/donate/?hosted_button_id=WAZS3QSDTPGA8)
      - **FAQ & Hilfe:** [Zum Community-Thread](https://community.home-assistant.io/t/notifications-announcements/728100/2?u=blacky)

  domain: automation
  input:
    trigger_section:
      name: "🧲 Trigger & Endzustand"
      icon: mdi:toggle-switch
      collapsed: false
      input:
        dynamic_trigger:
          name: Trigger-Auslöser
          description: >
            Wähle die Trigger aus, die deine Automation starten sollen.
            Du kannst beliebige Trigger-Typen verwenden (z. B. Zustände, numerische Werte, Zeitpunkte, Events, etc.).
            Mehrere Trigger sind möglich.
          selector:
            trigger:
        clear_trigger:
          name: Endzustand (optional)
          description: >
            Lege optional Trigger für das **automatische Löschen** der Benachrichtigung fest.
            Z. B. wenn eine Entität wieder den Zustand *OK* erreicht.
            Es muss zwingend **id: clear_notification_trigger** angegeben werden.
          default: []
          selector:
            trigger:
    device_notify_settings:
      name: "Benachrichtigungen (Mobil und Persistent)"
      icon: mdi:devices
      collapsed: true
      input:
        notify_title:
          name: Benachrichtigungstitel
          description: >
            Gib den Titel der Benachrichtigung ein, der sowohl für die Android-Benachrichtigung als auch für die persistente Anzeige in der UI verwendet wird.
          default: "📢 Gebe hier den Benachrichtigungstitel ein"
          selector:
            text:
        notify_message:
          name: Benachrichtigungsnachricht
          description: >
            Gib die Nachricht ein, die für die Benachrichtigung ausgesendet wird – sowohl als Android-Meldung als auch in der persistenten Anzeige.
          default: "Gebe hier die Benachrichtigungsnachricht ein 🙂"
          selector:
            text:
              multiline: true
        notify_data:
          name: "Android-spezifische Optionen (Optional)"
          description: >
            **Optionen für Android (Optional):**
            - **Hochpriorität**: Benachrichtigungen werden sofort zugestellt, um wichtige Meldungen umgehend zu übermitteln.
            - **Feste Benachrichtigung**: Wichtige Meldungen bleiben in der Benachrichtigungsleiste, bis sie aktiv entfernt werden.
            - **Benachrichtigungskanal**: Organisiert verschiedene Benachrichtigungseinstellungen (Töne, Vibration etc.).
              Diese Option wird immer genutzt und erfordert die Eingabe eines Kanalnamens.
          default: []
          selector:
            select:
              multiple: true
              options:
                - label: Hochpriorität
                  value: "high_priority"
                - label: Feste Benachrichtigung
                  value: "sticky"
        notify_tag:
          name: Benachrichtigungskanal – Android & Persistent
          description: >
            Gib den Namen des Benachrichtigungskanals ein.
            Dieser Kanal wird auch als Tag für die persistente Benachrichtigung verwendet und – falls noch nicht vorhanden – beim ersten Senden der Benachrichtigung erstellt.
          default: "default_channel"
          selector:
            text:
        send_to_car:
          name: "Auto-Benachrichtigung aktivieren"
          description: >
            Wenn aktiviert (Standard: false) wird das Gerät 
            7b4588bc469f471e30087c5757f2ebf4 (EOS) in die Benachrichtigungsliste aufgenommen.
          default: false
          selector:
            boolean:
        send_to_work:
          name: "Arbeits-Benachrichtigung aktivieren"
          description: >
            Wenn aktiviert (Standard: false) werden die Geräte e0f19df8be795d8d5867ccf822025697 (Oliver Handy Arbeit) und 170f72bbcf6e90b79e776d8511fc2419 (Tina Tablet Arbeit) in die Benachrichtigungsliste aufgenommen.
          default: false
          selector:
            boolean:
    action_settings:
      name: "Aktions-Buttons"
      icon: mdi:gesture-tap
      collapsed: true
      input:
        include_action_buttons:
          name: Optionen für Aktions-Buttons (Optional)
          description: >
            Aktiviere die Aktions-Buttons, die in der Benachrichtigung angezeigt werden sollen, um Aktionen per Klick auszulösen.

            **Hinweis**: Es ist nicht zwingend erforderlich, Aktions-Buttons zu verwenden, um eine Aktion auszuführen.
            Falls du lieber eine automatische Aktion nutzen möchtest, aktiviere stattdessen eine der **Automatischen Aktionen** im untenstehenden Abschnitt.

            ⚠️ Gib die Namen aller aktivierten **Aktions-Buttons** an, einschließlich der Löschen-Schaltfläche.
            Fehlt eine Angabe, könnte dies dazu führen, dass die Automation nicht korrekt funktioniert.
          default: []
          selector:
            select:
              options:
                - label: Aktions-Button 1 aktivieren
                  value: "enable_action_button_1"
                - label: Aktions-Button 2 aktivieren
                  value: "enable_action_button_2"
                - label: Aktions-Button 3 aktivieren
                  value: "enable_action_button_3"
              multiple: true
        action_button_1:
          name: Aktions-Button 1
          description: >
            Gib den Namen der Schaltfläche an, die in der Benachrichtigung angezeigt wird.
            Diese Schaltfläche löst alle Aktionen aus, die unter **Aktion 1** im Abschnitt "Automatische Aktionen" definiert sind.
          default: []
          selector:
            text:
        action_button_2:
          name: Aktions-Button 2
          description: >
            Gib den Namen der Schaltfläche an, die in der Benachrichtigung angezeigt wird.
            Diese Schaltfläche löst alle Aktionen aus, die unter **Aktion 2** im entsprechenden Abschnitt definiert sind.
          default: []
          selector:
            text:
        action_button_3:
          name: Aktions-Button 3
          description: >
            Gib den Namen der Schaltfläche an, die in der Benachrichtigung angezeigt wird.
            Diese Schaltfläche löst alle Aktionen aus, die unter **Aktion 3** im entsprechenden Abschnitt definiert sind.
          default: []
          selector:
            text:
        action_button_delete:
          name: Löschen-Schaltfläche
          description: >
            Gib den Namen der Löschen-Schaltfläche an, die in der Benachrichtigung angezeigt wird.
            Diese Schaltfläche löscht alle Benachrichtigungen, die mit dem angegebenen **Benachrichtigungskanal** verbunden sind.
            Sie wird automatisch zur Benachrichtigung hinzugefügt, falls ein Aktions-Button aktiviert wurde.
          default: Löschen
          selector:
            text:
    auto_action_settings:
      name: "Automatische Aktionen"
      icon: mdi:code-tags
      collapsed: true
      input:
        action_1:
          name: Aktion 1
          description: >
            Gib die Aktionen ein, die ausgeführt werden sollen, wenn die Entität den definierten Zustand erreicht.
            Diese Aktionen sind ebenso mit der **Aktions-Button 1** verknüpft.
          default: []
          selector:
            action:
        action_2:
          name: Aktion 2
          description: >
            Gib die Aktionen ein, die ausgeführt werden sollen, wenn die Entität den definierten Zustand erreicht.
            Diese Aktionen sind ebenso mit der **Aktions-Button 2** verknüpft.
          default: []
          selector:
            action:
        action_3:
          name: Aktion 3
          description: >
            Gib die Aktionen ein, die ausgeführt werden sollen, wenn die Entität den definierten Zustand erreicht.
            Diese Aktionen sind ebenso mit der **Aktions-Button 3** verknüpft.
          default: []
          selector:
            action:
    custom_actions_settings:
      name: "Benutzerdefinierte Aktionen"
      icon: mdi:code-tags
      collapsed: true
      input:
        include_custom_actions:
          name: Benutzerdefinierte Aktionsoption (Optional)
          description: >
            Passe deine Automation mit beliebigen Aktionen an.
            Zum Beispiel können spezielle Durchsagen über ausgewählte Lautsprecher ausgeführt werden.
          default: disable_custom_actions
          selector:
            select:
              options:
                - label: Benutzerdefinierte Aktionen aktivieren
                  value: "enable_custom_actions"
                - label: Benutzerdefinierte Aktionen deaktivieren
                  value: "disable_custom_actions"
        custom_actions:
          name: Benutzerdefinierte Aktionen
          description: >
            Gib die benutzerdefinierten Aktionen ein, die ausgeführt werden sollen.
          default: []
          selector:
            action:
    conditions_settings:
      name: "Bedingungen"
      icon: mdi:earth
      collapsed: true
      input:
        global_conditions:
          name: Globale Bedingungen
          description: >
            Gib globale Bedingungen ein, die erfüllt sein müssen, damit die Automation ausgeführt wird.
          default: []
          selector:
            condition:
        trigger_conditions:
          name: Bedingungen für Trigger-Auslöser
          description: >
            Gib Bedingungen ein, die beim Auslösen der Trigger zusätzlich erfüllt sein müssen.
          default: []
          selector:
            condition:
        clear_conditions:
          name: Bedingungen für Endzustand
          description: >
            Gib Bedingungen ein, die beim Eintreten des Endzustands zusätzlich erfüllt sein müssen.
          default: []
          selector:
            condition:

mode: restart

variables:
  notify_title: !input notify_title
  notify_message: !input notify_message
  notify_data: !input notify_data
  notify_tag: !input notify_tag
  send_to_car: !input send_to_car
  send_to_work: !input send_to_work
  include_action_buttons: !input include_action_buttons
  action_button_1: !input action_button_1
  action_button_2: !input action_button_2
  action_button_3: !input action_button_3
  action_button_delete: !input action_button_delete
  action_1: !input action_1
  action_2: !input action_2
  action_3: !input action_3
  include_custom_actions: !input include_custom_actions
  custom_actions: !input custom_actions
  global_conditions: !input global_conditions
  trigger_conditions: !input trigger_conditions
  clear_conditions: !input clear_conditions

  notify_devices: >-
    {% set devices = [
      '30d663ef8b06c87a5bdb80a56af74b15',
      '0cfbf22f9dc76ecf11f78017669b1d51'
    ] %}
    {% if send_to_work %}
      {{ devices + [
      'e0f19df8be795d8d5867ccf822025697',
      '170f72bbcf6e90b79e776d8511fc2419'
      ] }}
    {% else %}
      {{ devices }}
    {% endif %}
    {#
    {% if send_to_car %}
      {{ devices + ['7b4588bc469f471e30087c5757f2ebf4'] }}
    {% else %}
      {{ devices }}
    {% endif %}
    #}

  device_message_data: >-
    {% set message = namespace(data={}) %}
    {% set actions = [] %}
    {% if 'high_priority' in notify_data %}
      {% set message.data = dict(message.data, **{ 'ttl': 0, 'priority': 'high' }) %}
    {% endif %}
    {% set message.data = dict(message.data, **{ 'channel': notify_tag }) %}
    {% set message.data = dict(message.data, **{ 'tag': notify_tag }) %}
    {% if 'enable_action_button_1' in include_action_buttons %}
      {% set actions = actions + [{ 'action': 'action_button_1', 'title': action_button_1 }] %}
    {% endif %}
    {% if 'enable_action_button_2' in include_action_buttons %}
      {% set actions = actions + [{ 'action': 'action_button_2', 'title': action_button_2 }] %}
    {% endif %}
    {% if 'enable_action_button_3' in include_action_buttons %}
      {% set actions = actions + [{ 'action': 'action_button_3', 'title': action_button_3 }] %}
    {% endif %}
    {% if 'sticky' in notify_data %}
      {% set message.data = dict(message.data, **{ 'sticky': "true" }) %}
      {% set actions = actions + [{ 'action': 'dismiss', 'title': action_button_delete }] %}
    {% endif %}
    {% if actions | length > 0 %}
      {% set message.data = dict(message.data, **{ 'actions': actions }) %}
    {% endif %}
    {{ message.data }}

triggers:
  # Faltet alle Einträge aus dynamic_trigger an den Anfang deiner Triggerliste
  - triggers: !input dynamic_trigger

  # Feste Button‑Events
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: action_button_1
      tag: !input notify_tag
    id: action_button_1

  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: action_button_2
      tag: !input notify_tag
    id: action_button_2

  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: action_button_3
      tag: !input notify_tag
    id: action_button_3

  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: dismiss
      tag: !input notify_tag
    id: clear_notification_button

  # Faltet alle Einträge aus clear_trigger ans Ende der Liste
  - triggers: !input clear_trigger

condition: !input global_conditions

action:
  - choose:
      - alias: "Prüfe, ob Aktions-Button 1 gedrückt wurde"
        conditions:
          - condition: trigger
            id: action_button_1
        sequence: !input action_1
      - alias: "Prüfe, ob Aktions-Button 2 gedrückt wurde"
        conditions:
          - condition: trigger
            id: action_button_2
        sequence: !input action_2
      - alias: "Prüfe, ob Aktions-Button 3 gedrückt wurde"
        conditions:
          - condition: trigger
            id: action_button_3
        sequence: !input action_3
      - alias: "Prüfe, ob Löschen-Schaltfläche gedrückt oder Endzustand erreicht wurde (Lösch-Trigger)"
        conditions:
          - condition: or
            conditions:
              - condition: trigger
                id: clear_notification_button
              - condition: trigger
                id: clear_notification_trigger
        sequence:
          - choose:
              - conditions: !input clear_conditions
                sequence:
                  - action: script.notification_delete
                    data:
                      notify_tag: "{{ notify_tag }}"
            default:
              - action: script.notification_delete
                data:
                  notify_tag: "{{ notify_tag }}"
      - alias: "Prüfe Trigger-Bedingungen für Hauptbenachrichtigung"
        conditions:
          - condition: template
            value_template: "{{ not trigger or trigger.get('id') == None }}"
            enabled: false
        sequence:
          - choose:
              - conditions: !input trigger_conditions
                sequence:
                  - alias: "Erstelle persistente Benachrichtigung"
                    service: persistent_notification.create
                    data:
                      title: !input notify_title
                      message: !input notify_message
                      notification_id: !input notify_tag
                  - alias: "Sende eine Benachrichtigung an jedes Gerät"
                    repeat:
                      for_each: "{{ notify_devices }}"
                      sequence:
                        - variables:
                            sensor_entity_id: "sensor.{{ device_attr(repeat.item, 'name') | slugify }}_active_notification_count"
                        - if:
                            - condition: template
                              value_template: >
                                {% set sensor_entity_id = "sensor.{{ device_attr(repeat.item, 'name') | slugify }}_active_notification_count" %}
                                {% set ns = namespace(notification_exists=false) %}

                                {% if states(sensor_entity_id) != 'unknown' %}
                                  {% set attributes = states[sensor_entity_id].attributes.items() %}
                                  {% for key, value in attributes %}
                                    {% if key.startswith('android.title_io.homeassistant.companion.android_') %}
                                      {% set idx = key.split('_')[-1] %}
                                      {% set big_text_key = "android.bigText_io.homeassistant.companion.android_" ~ idx %}
                                      {% if value == notify_title and state_attr(sensor_entity_id, big_text_key) == notify_message %}
                                        {% set ns.notification_exists = true %}
                                      {% endif %}
                                    {% endif %}
                                  {% endfor %}
                                {% endif %}

                                {{ not ns.notification_exists }}
                          then:
                            - action: "notify.mobile_app_{{ device_attr(repeat.item, 'name') | slugify }}"
                              data:
                                title: !input notify_title
                                message: !input notify_message
                                data: "{{ device_message_data }}"
                  - if:
                      - condition: template
                        alias: "Führe benutzerdefinierte Aktion aus"
                        value_template: "{{ 'enable_custom_actions' in include_custom_actions }}"
                    then: !input custom_actions
            default: []
