blueprint:
  source_url: "https://raw.githubusercontent.com/tefracky/homeassistant-blueprints/blueprints/automations/notifications.yaml"
  name: Benachrichtigungen (Android + Persistent)
  description: >
    # 📢 Benachrichtigungen

    ## **Version 1.3**

    Sende smarte Benachrichtigungen bei definierten Auslösern – sowohl an dein Android-Gerät als auch als permanente Mitteilung in der Home Assistant-Oberfläche.

    Mit dieser Blueprint-Vorlage kannst du flexibel Trigger definieren (z. B. Zustände, numerische Werte oder Zeitpunkte) und daraufhin Nachrichten verschicken, inklusive optionaler Sprachansage und interaktiver Aktions-Buttons.

    - **🧲 Trigger & Endzustände**:
      - Nutze den neuen **Trigger Selector**, um beliebige Ereignisse per UI zu definieren.
      - Mehrere Trigger sind gleichzeitig möglich.
      - Optional: Definiere auch den Endzustand (z. B. zum Entfernen einer Notification). Es muss zwingend **id: clear_notification_trigger** angegeben werden.

    - **📲 Benachrichtigungen**:
      - Nachrichten an Mobilgeräte senden.
      - Als persistente UI-Mitteilungen anzeigen.
      - Integrierte Text-to-Speech und Aktionen möglich.

    - **🕹 Aktions-Buttons**:
      - Ergänze individuell konfigurierbare Buttons direkt in der Notification.

    - **⛔ Globale Bedingungen**:
      - Lege Bedingungen fest, unter denen die Automation überhaupt ausgeführt werden darf.

    ## Changelog

    **1.3**: Verbesserungen an den Benachrichtigungsoptionen und der Benutzerfreundlichkeit

    - 🛠 **Neue Auswahl für Benachrichtigungsoptionen:**
      Die Auswahl für die mobile App-Benachrichtigungsoption (`include_notify`) wurde verbessert, um zwischen Aktivieren und Deaktivieren zu unterscheiden.

    - ✏️ **Standardwerte aktualisiert:**
      Standardwerte für Titel und Nachricht der Benachrichtigung (`notify_title`, `notify_message`) wurden hinzugefügt, um die Konfiguration zu erleichtern.

    - 📱 **Android-spezifische Optionen erweitert:**
      Zusätzliche Optionen für Android-Benachrichtigungen (`notify_data`) wie Hochpriorität und feste Benachrichtigungen wurden hinzugefügt.

    - 🔧 **Verbesserte Struktur:**
      Die YAML-Definition wurde optimiert, um die Lesbarkeit und Wartbarkeit zu verbessern.

    **1.2**: Benachrichtigungen senden und löschen an Skripte ausgelagert

    - 🗑 **Refaktorierte Löschlogik:**
      Statt der bisherigen, manuellen Abfolge zum Löschen persistenter Benachrichtigungen wird nun das zentrale Skript `script.notification_delete` aufgerufen. Dies sorgt für einen klareren Ablauf und verbesserte Wartbarkeit.
    
    - 🔔 **Modularisierte Benachrichtigungsroutine:**
      Ein neuer Choose-Zweig „Check if notification is enabled“ überprüft, ob mobile App-Benachrichtigungen aktiviert sind und ob Geräte vorhanden sind, und löst dann das Skript `script.notification_send` aus – inklusive Übergabe aller relevanten Parameter wie Titel, Nachricht, Daten und Aktions-Buttons.
    
    - 🧹 **Bereinigung der Legacy-Struktur:**
      Der bisher verwendete `default`-Block, der separate Zuständigkeiten für Gerätebenachrichtigungen und das Erstellen persistenter Nachrichten innehatte, wurde komplett entfernt, um Redundanzen abzubauen und die Logik zu vereinheitlichen.
    
    - ⚙️ **Integrierte benutzerdefinierte Aktionen:**
      Die Option, benutzerdefinierte Aktionen auszuführen, bleibt erhalten – in den neuen Benachrichtigungs-Branch integriert, um den Ablauf zu vereinheitlichen und die Konfiguration übersichtlicher zu gestalten.

    **1.1**: Aktionen zu Benachrichtigungen hinzugefügt
    
    - ✨ Umstellung auf `trigger:` Selector – mehr Flexibilität, bessere UI.
    
    - ➕ Unterstützung für **mehrere Trigger** gleichzeitig.
    
    - 🧼 Entfernt: Komplexe manuelle Zustandstyp-Auswahl.
    
    - 🧽 Entfernt: `time_delay_state`, da dies direkt im Trigger möglich ist (`for:`).
    
    - 🧩 Trigger & Endzustand in einer Gruppe zusammengeführt.

    **Vielen Dank an die ursprünglichen Entwickler:**
      - [Notifications and Announcements](https://gist.github.com/Blackshome/180ca4a24af81cd5d843acfc039039bc)
      - [State Notification Actions](https://gist.github.com/Blackshome/06f6f28e76299267b813dac48608f549)
      - **Spende für den Entwickler:** [Hier klicken](https://www.paypal.com/donate/?hosted_button_id=WAZS3QSDTPGA8)
      - **FAQ & Hilfe:** [Zum Community-Thread](https://community.home-assistant.io/t/notifications-announcements/728100/2?u=blacky)

  domain: automation
  input:
    trigger_section:
      name: "🧲 Trigger & Endzustand"
      icon: mdi:toggle-switch
      collapsed: false
      input:
        dynamic_trigger:
          name: Trigger-Auslöser
          description: >
            Wähle die Trigger aus, die deine Automation starten sollen.
            Du kannst beliebige Trigger-Typen verwenden (z. B. Zustände, numerische Werte, Zeitpunkte, Events, etc.).
            Mehrere Trigger sind möglich.
          selector:
            trigger:

        clear_trigger:
          name: Endzustand (optional)
          description: >
            Lege optional Trigger für das **automatische Löschen** der Benachrichtigung fest.
            Z. B. wenn eine Entität wieder den Zustand *OK* erreicht.
            Es muss zwingend **id: clear_notification_trigger** angegeben werden.
          default: []
          selector:
            trigger:

    device_notify_settings:
      name: "Benachrichtigungen (Mobil und Persistent)"
      icon: mdi:devices
      collapsed: true
      input:
        include_notify:
          name: Mobile App Benachrichtigungsoption
          description: >
            Diese Option ist standardmäßig aktiviert, um Benachrichtigungen an die ausgewählten Geräte zu senden.
          default: enable_mobile_app_notify
          selector:
            select:
              options:
                - label: Mobile App Benachrichtigungsoption aktivieren
                  value: "enable_mobile_app_notify"
                - label: Mobile App Benachrichtigungsoption deaktivieren
                  value: "disable_mobile_app_notify"
        notify_title:
          name: Benachrichtigungstitel
          description: >
            Gib den Titel der Benachrichtigung ein, der sowohl für die Android-Benachrichtigung als auch für die persistente Anzeige in der UI verwendet wird.
          default: "📢 Gebe hier den Benachrichtigungstitel ein"
          selector:
            text:
        notify_message:
          name: Benachrichtigungsnachricht
          description: >
            Gib die Nachricht ein, die für die Benachrichtigung ausgesendet wird – sowohl als Android-Meldung als auch in der persistenten Anzeige.
          default: "Gebe hier die Benachrichtigungsnachricht ein 🙂"
          selector:
            text:
        notify_data:
          name: "Android-spezifische Optionen (Optional)"
          description: >
            **Optionen für Android (Optional):**
            - **Hochpriorität**: Benachrichtigungen werden sofort zugestellt, um wichtige Meldungen umgehend zu übermitteln.
            - **Feste Benachrichtigung**: Wichtige Meldungen bleiben in der Benachrichtigungsleiste, bis sie aktiv entfernt werden.
            - **Benachrichtigungskanal**: Organisiert verschiedene Benachrichtigungseinstellungen (Töne, Vibration etc.).
              Diese Option wird immer genutzt und erfordert die Eingabe eines Kanalnamens.
          default: []
          selector:
            select:
              multiple: true
              options:
                - label: Hochpriorität
                  value: "high_priority"
                - label: Feste Benachrichtigung
                  value: "sticky"
        notify_tag:
          name: Benachrichtigungskanal – Android & Persistent
          description: >
            Gib den Namen des Benachrichtigungskanals ein.
            Dieser Kanal wird auch als Tag für die persistente Benachrichtigung verwendet und – falls noch nicht vorhanden – beim ersten Senden der Benachrichtigung erstellt.
            Empfohlenes Icon: mdi:radio
          default: "default_channel"
          selector:
            text:
        send_car:
          name: "Auto-Benachrichtigung aktivieren"
          description: >
            Wenn aktiviert (Standard: true) wird das Gerät 
            7b4588bc469f471e30087c5757f2ebf4 (Auto) in die Benachrichtigungsliste aufgenommen.
          default: true
          selector:
            boolean:
    action_settings:
      name: "Aktions-Buttons"
      icon: mdi:gesture-tap
      collapsed: true
      input:
        include_action_buttons:
          name: Optionen für Aktions-Buttons (Optional)
          description: >
            Aktiviere die Aktions-Buttons, die in der Benachrichtigung angezeigt werden sollen, um Aktionen per Klick auszulösen.

            **Hinweis**: Es ist nicht zwingend erforderlich, Aktions-Buttons zu verwenden, um eine Aktion auszuführen.
            Falls du lieber eine automatische Aktion nutzen möchtest, aktiviere stattdessen eine der **Automatischen Aktionen** im untenstehenden Abschnitt.

            ⚠️ Gib die Namen aller aktivierten **Aktions-Buttons** an, einschließlich der Löschen-Schaltfläche.
            Fehlt eine Angabe, könnte dies dazu führen, dass die Automation nicht korrekt funktioniert.
          default: []
          selector:
            select:
              options:
                - label: Aktions-Button 1 aktivieren
                  value: "enable_action_button_1"
                - label: Aktions-Button 2 aktivieren
                  value: "enable_action_button_2"
                - label: Aktions-Button 3 aktivieren
                  value: "enable_action_button_3"
              multiple: true
        action_button_1:
          name: Aktions-Button 1
          description: >
            Gib den Namen der Schaltfläche an, die in der Benachrichtigung angezeigt wird.
            Diese Schaltfläche löst alle Aktionen aus, die unter **Aktion 1** im Abschnitt "Automatische Aktionen" definiert sind.
          default: []
          selector:
            text:
        action_button_2:
          name: Aktions-Button 2
          description: >
            Gib den Namen der Schaltfläche an, die in der Benachrichtigung angezeigt wird.
            Diese Schaltfläche löst alle Aktionen aus, die unter **Aktion 2** im entsprechenden Abschnitt definiert sind.
          default: []
          selector:
            text:
        action_button_3:
          name: Aktions-Button 3
          description: >
            Gib den Namen der Schaltfläche an, die in der Benachrichtigung angezeigt wird.
            Diese Schaltfläche löst alle Aktionen aus, die unter **Aktion 3** im entsprechenden Abschnitt definiert sind.
          default: []
          selector:
            text:
        action_button_stop:
          name: Löschen-Schaltfläche
          description: >
            Gib den Namen der Löschen-Schaltfläche an, die in der Benachrichtigung angezeigt wird.
            Diese Schaltfläche löscht alle Benachrichtigungen, die mit dem angegebenen **Benachrichtigungskanal** verbunden sind.
            Sie wird automatisch zur Benachrichtigung hinzugefügt, falls eine Aktions-Button aktiviert wurde.
          default: Löschen
          selector:
            text:
    auto_action_settings:
      name: "Automatische Aktionen"
      icon: mdi:code-tags
      collapsed: true
      input:
        action_1:
          name: Aktion 1
          description: >
            Gib die Aktionen ein, die ausgeführt werden sollen, wenn die Entität den definierten Zustand erreicht.
            Diese Aktionen sind ebenso mit der **Aktions-Button 1** verknüpft.
          default: []
          selector:
            action:
        action_2:
          name: Aktion 2
          description: >
            Gib die Aktionen ein, die ausgeführt werden sollen, wenn die Entität den definierten Zustand erreicht.
            Diese Aktionen sind ebenso mit der **Aktions-Button 2** verknüpft.
          default: []
          selector:
            action:
        action_3:
          name: Aktion 3
          description: >
            Gib die Aktionen ein, die ausgeführt werden sollen, wenn die Entität den definierten Zustand erreicht.
            Diese Aktionen sind ebenso mit der **Aktions-Button 3** verknüpft.
          default: []
          selector:
            action:
    custom_actions_settings:
      name: "Benutzerdefinierte Aktionen"
      icon: mdi:code-tags
      collapsed: true
      input:
        include_custom_actions:
          name: Benutzerdefinierte Aktionsoption (Optional)
          description: >
            Passe deine Automation mit beliebigen Aktionen an.
            Zum Beispiel können spezielle Durchsagen über ausgewählte Lautsprecher ausgeführt werden.
          default: disable_custom_actions
          selector:
            select:
              options:
                - label: Benutzerdefinierte Aktionen aktivieren
                  value: "enable_custom_actions"
                - label: Benutzerdefinierte Aktionen deaktivieren
                  value: "disable_custom_actions"
        custom_actions:
          name: Benutzerdefinierte Aktionen
          description: >
            Gib die benutzerdefinierten Aktionen ein, die ausgeführt werden sollen.
          default: []
          selector:
            action:
    global_conditions_settings:
      name: "Globale Bedingungen"
      icon: mdi:earth
      collapsed: true
      input:
        global_conditions:
          name: Globale Bedingungen
          description: >
            Gib globale Bedingungen ein, die erfüllt sein müssen, damit die Automation ausgeführt wird.
          default: []
          selector:
            condition:
mode: restart

variables:
  include_notify: !input include_notify
  notify_title: !input notify_title
  notify_message: !input notify_message
  notify_data: !input notify_data
  notify_tag: !input notify_tag
  include_action_buttons: !input include_action_buttons
  action_button_1: !input action_button_1
  action_button_2: !input action_button_2
  action_button_3: !input action_button_3
  action_button_stop: !input action_button_stop
  action_1: !input action_1
  action_2: !input action_2
  action_3: !input action_3
  include_custom_actions: !input include_custom_actions
  custom_actions: !input custom_actions
  global_conditions: !input global_conditions

  device_message_data: >-
    {% set message = namespace(data={}) %}
    {% set push = namespace(data={}) %}
    {% set actions = [] %}
    {% if push.data %}
      {% set message.data = dict(message.data, **{ 'push': push.data }) %}
    {% endif %}
    {% if 'high_priority' in notify_data %}
      {% set message.data = dict(message.data, **{ 'ttl': 0, 'priority': 'high' }) %}
    {% endif %}
    {% set message.data = dict(message.data, **{ 'channel': notify_tag }) %}
    {% set message.data = dict(message.data, **{ 'tag': notify_tag }) %}
    {% if 'enable_action_button_1' in include_action_buttons %}
      {% set actions = actions + [{ 'action': 'action_button_1', 'title': action_button_1 }] %}
    {% endif %}
    {% if 'enable_action_button_2' in include_action_buttons %}
      {% set actions = actions + [{ 'action': 'action_button_2', 'title': action_button_2 }] %}
    {% endif %}
    {% if 'enable_action_button_3' in include_action_buttons %}
      {% set actions = actions + [{ 'action': 'action_button_3', 'title': action_button_3 }] %}
    {% endif %}
    {% if 'sticky' in notify_data %}
      {% set message.data = dict(message.data, **{ 'sticky': "true" }) %}
      {% set actions = actions + [{'action': 'dismiss', 'title': 'Löschen'}] %}
    {% endif %}
    {% if actions | length > 0 %}
      {% set message.data = dict(message.data, **{ 'actions': actions }) %}
    {% endif %}
    {{ message.data }}

triggers:
  - triggers: !input dynamic_trigger

  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: "dismiss"
      tag: !input notify_tag
    id: clear_notification_trigger

  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: "action_button_1"
      tag: !input notify_tag
    id: action_button_1

  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: "action_button_2"
      tag: !input notify_tag
    id: action_button_2

  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: "action_button_3"
      tag: !input notify_tag
    id: action_button_3

  - triggers: !input clear_trigger

condition: !input global_conditions

action:
  - choose:
      - alias: "Prüfe, ob Aktions-Button 1 gedrückt wurde"
        conditions:
          - condition: trigger
            id: action_button_1
        sequence: !input action_1
      - alias: "Prüfe, ob Aktions-Button 2 gedrückt wurde"
        conditions:
          - condition: trigger
            id: action_button_2
        sequence: !input action_2
      - alias: "Prüfe, ob Aktions-Button 3 gedrückt wurde"
        conditions:
          - condition: trigger
            id: action_button_3
        sequence: !input action_3
      - alias: "Prüfe, ob Löschen-Schaltfläche gedrückt oder ob ob Endzustand erreicht wurde (Lösch-Trigger)"
        conditions:
          - condition: trigger
            id: clear_notification_trigger
        sequence:
          - action: script.notification_delete
            metadata: {}
            data:
              notify_tag: "{{ notify_tag }}"
      - alias: "Check if notification is enabled"
        conditions:
          - "{{ include_notify == 'enable_mobile_app_notify' }}"
          - "{{ filtered_devices | length > 0 }}"
        sequence:
          - action: script.notification_send
            metadata: {}
            data:
              include_notify: "{{ include_notify }}"
              notify_title: "{{ notify_title }}"
              notify_message: "{{ notify_message }}"
              notify_data: "{{ notify_data }}"
              notify_tag: "{{ notify_tag }}"
              send_car: "{{ send_car }}"
              include_action_buttons: "{{ include_action_buttons }}"
              action_button_1: "{{ action_button_1 }}"
              action_button_2: "{{ action_button_2 }}"
              action_button_3: "{{ action_button_3 }}"
              action_button_stop: "{{ action_button_stop }}"
              action_1: "{{ action_1 }}"
              action_2: "{{ action_2 }}"
              action_3: "{{ action_3 }}"
          - if:
              - condition: template
                alias: "Führe benutzerdefinierte Aktion aus"
                value_template: "{{ 'enable_custom_actions' in include_custom_actions }}"
            then: !input custom_actions
